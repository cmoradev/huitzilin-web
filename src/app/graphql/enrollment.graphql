fragment EnrollmentParts on Enrollment {
  id
  details
  state
  isPackage
  inPackage
  activity {
    id
    name
    isPackage
    inPackage
  }
  cycle {
    id
    name
  }
  student {
    id
    picture
    fullname
    code
  }
  classroom {
    id
    name
    color
  }
  level {
    id, 
    name,
    abbreviation
  }
  parentId
  children {
    totalCount
  }
}

mutation createOneEnrollment($enrollment: CreateEnrollment!) {
  createOneEnrollment(input: { enrollment: $enrollment }) {
    ...EnrollmentParts
  }
}

query getEnrollmentsPage(
  $offset: Int = 0
  $limit: Int = 10
  $filter: EnrollmentFilter = {}
) {
  enrollments(
    paging: { limit: $limit, offset: $offset }, 
    filter: $filter,
    sorting: [
      { field: order, direction: ASC }
      { field: createdAt, direction: DESC }
    ]
    ) {
    totalCount
    pageInfo {
      hasNextPage
      hasPreviousPage
    }
    nodes {
      ...EnrollmentParts
    }
  }
}

mutation updateOneEnrollment($id: ID!, $update: UpdateEnrollment!) {
  updateOneEnrollment(input: { id: $id, update: $update }) {
    ...EnrollmentParts
  }
}

mutation deleteOneEnrollment($id: ID!) {
  deleteOneEnrollment(input: { id: $id }) {
    id
  }
}

mutation setOrderEnrollments($payload: [SetOrderInput!]!) {
  setOrderEnrollments(input: $payload) {
    updatedCount
  }
}
