fragment ActivityParts on Activity {
  id
  name
  quantity
  isPackage
  inPackage
  order
  createdAt
  updatedAt
}

mutation createOneActivity($activity: CreateActivity!) {
  createOneActivity(input: { activity: $activity }) {
    ...ActivityParts
  }
}

query getActivityPage(
  $offset: Int = 0
  $limit: Int = 10
  $filter: ActivityFilter = {}
) {
  activities(
    paging: { limit: $limit, offset: $offset }
    sorting: [
      { field: order, direction: ASC }
      { field: createdAt, direction: DESC }
    ]
    filter: $filter
  ) {
    totalCount
    pageInfo {
      hasNextPage
      hasPreviousPage
    }
    nodes {
      ...ActivityParts
    }
  }
}

mutation updateOneActivity($id: ID!, $update: UpdateActivity!) {
  updateOneActivity(input: { id: $id, update: $update }) {
    ...ActivityParts
  }
}

mutation deleteOneActivity($id: ID!) {
  deleteOneActivity(input: { id: $id }) {
    id
  }
}

mutation setOrderActivities($payload: [SetOrderActivity!]!) {
  setOrderActivities(input: $payload) {
    updatedCount
  }
}
