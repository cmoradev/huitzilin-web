fragment ActivityParts on Activity {
  id,
  name,
  createdAt
  updatedAt
}

mutation createOneActivity ($activity: CreateActivity!) {
  createOneActivity (
    input: {
      activity: $activity
    }
  ) {
    ...ActivityParts
  }
}

query getActivityPage ($offset: Int = 0, $limit: Int = 10, $filter: ActivityFilter = {})  {
  activities (
    paging: { limit: $limit, offset: $offset },
    filter: $filter
  ) {
    totalCount
    pageInfo {
      hasNextPage,
      hasPreviousPage
    },
    nodes {
			...ActivityParts
    }
  }
}

mutation updateOneActivity ($id: ID!, $update: UpdateActivity!) {
  updateOneActivity (
    input: {
      id: $id,
      update: $update
    }
  ) {
    ...ActivityParts
  }
}

mutation deleteOneActivity ($id: ID!) {
	deleteOneActivity (
    input: {
      id: $id
    }
  ) {
    id
  }
}