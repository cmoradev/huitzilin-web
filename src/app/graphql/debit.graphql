fragment DebitParts on Debit {
  id
  description
  unitPrice
  quantity
  amount
  discount
  subtotal
  taxes
  total
  withTax
  state
  frequency
  delinquency,
  dueDate
  paymentDate
  concepts (
    filter: {
      application: { eq: DEBT_PAYMENT },
      pendingPayment: {gt: 0}
      income: { state: {neq: CANCELLED} }
    },
    sorting: [{direction: DESC, field: createdAt}]
  ) {    pendingPayment
  }
  discounts {
    id
    name
    value
    type
  }
}

mutation createOneDebit($debit: CreateDebit!) {
  createOneDebit(input: { debit: $debit }) {
    ...DebitParts
  }
}

query getDebitsPage(
  $offset: Int = 0
  $limit: Int = 10
  $filter: DebitFilter = {}
) {
  debits(
    paging: { limit: $limit, offset: $offset },
    sorting:  { field: dueDate, direction: ASC }
    filter: $filter
  ) {
    totalCount
    pageInfo {
      hasNextPage
      hasPreviousPage
    }
    nodes {
      ...DebitParts
    }
  }
}

mutation updateOneDebit($id: ID!, $update: UpdateDebit!) {
  updateOneDebit(input: { id: $id, update: $update }) {
    ...DebitParts
  }
}

mutation createManyDebits ($debits: [CreateDebit!]!) {
  createManyDebits (
    input: {
      debits: $debits
    }
  ){
    ...DebitParts
  }
}

mutation deleteOneDebit($id: ID!) {
  deleteOneDebit(input: { id: $id }) {
    id
  }
}
