fragment UserParts on User {
  id,
  username,
  email
  branchId
  cycleId
}

query getUsersPage ($offset: Int = 0, $limit: Int = 10, $filter: UserFilter = {})  {
  users (
    paging: { limit: $limit, offset: $offset },
    filter: $filter
  ) {
    totalCount
    pageInfo {
      hasNextPage,
      hasPreviousPage
    },
    nodes {
			...UserParts
    }
  }
}

mutation createOneUser($input: SignUpInput!) {
  signUp  (
   input:$input
  ){
    id,
    username
  }
}

mutation updateOneUser($id: ID!, $update: UpdateUser!) {
  updateOneUser  (
   input: {id:$id, update: $update}
  ){
    id
  }
}

mutation deleteOneUser($id: ID!) {
  deleteOneUser  (
   input: {id:$id}
  ){
    id,
    username,
  }
}

query getUserPolicies ($id: ID!) {
  user (id: $id) {
    policies {
      id
    }
  }
}